---
title: "Model Estimated Controls for Survival Outcomes"
author: "K"
format: 
  html:
    self-contained: true
editor: visual
---

## Introduction

Model estimated controls (MECs) are statistical models, that can be used to assess the efficacy of new therapies without needing to use clinical trials.

MECs can act as counterfactual evidence (a way to predict 'what if?'- i.e., how would patients respond if they had received a different treatment?)

For survival outcomes, MECs can be used as a control to compare the effect of a control treatment against the effect of an observed experimental treatment on overall survival in patients.

We will implement MECs using the 'psc' package which is specifically allows for the comparison of patient groups treated with an experimental treatment against a counterfactual model.

Let's first install and load the 'psc' and other necessary packages:

```{r}
# install.package("psc")
library(psc)
library(survival)
library(ggpubr)
```

## An example

In this example, we will look at survival outcomes in patients with pancreatic cancer from the ESPAC (European Study for Pancreatic Cancer)-4 trial and compare how the survival of patients differs with two different treatments...

We are going to load the model that is going to act as the control treatment (the counterfactual evidence discussed above). This model is a flexible parametric model that was created using the 'flexsurv' package.

We can look at the model in more detail

```{r}
load("Output/Models/flsm.R")

flsm$call
class(flsm)
```

So now that we have our control treatment, monotherapy gemcitabine (GEM), we will load the ESPAC-4 dataset. ESPAC-4 consists of patients that have been treated with the experimental treatment, adjuvant gemcitabine and capecitabine, GEMCAP.

Our aim is to compare the ESPAC-4 dataset against the GEM model to determine which of the treatments is more effective.

It is important that the variables present in the model are also present in the comparison dataset. It is also important that the time variable in the model's survival object and in the comparison dataset are encoded as 'time'.

```{r}

load("Data/espac4gemcap.R")
head(espac4_gemcap[1:3,])
head(flsm$data$m[1:3,])
names(flsm$data$m[,2:5])%in%names(espac4_gemcap)

```

We should also check the the variables are the correct class...

Categorical variables should be class factor and continuous variables should be numeric.

```{r}
str(espac4_gemcap)
```

## Fit counterfactual model :)

Now that we have checked the correct variables are in our dataset and everything is encoded correctly, we can turn out flexible parametric model into a counterfactual model. We will use the pscfit() function:

```{r results='hide',warning=FALSE}
cfm <- pscCFM(flsm)

```

It is possible to visualise and summarise the data that was used to fit this model with the built in functions within pscCFM():

```{r}
cfm$datasumm$summ_Table

ggarrange(plotlist = cfm$datavis, ncol = 2)

```

## Make comparison!

We have now created a counterfactual model which can be compared against the ESPAC-4 data cohort. The comparison can be carried out using the pscfcit() function.

Don't forget that the pscfit() function requires the 'time' variables in the data cohort and in the counterfactual model to be encoded as 'time' and the event variable to be encoded as 'cen'. The variable names need to be the exact same.

```{r results='hide',warning=FALSE}
psc <- pscfit(cfm, espac4_gemcap)
```

The output of the comparison can be visualised. The plot below visualises the effect of each treatment on ESPAC-4 patients. The pink line represents the model's predicted survival estimates (if the ESPAC-4 patients had been treated with GEM) and the orange line represents the data cohort's observed survival estimates.

```{r}
plot(psc)
```

The summary of the model can be obtained using the generic summary() function to show the posterior density. The posterior estimates of the deviance information criterion (DIC) and the efficacy parameter, $\beta$, are calculated and shown.

$\beta$ is a measurement of the distance between the observed data and the model estimate. The 2.5 and 97.5% quantiles are also given. The odds ratio comparing the experimental treatment to the control can be calculated as exp($\beta$), in this case exp(-0.466452).

```{r}

summary(psc)
```

We can extract the posterior distribution of the 'psc' and can view its autocorrelation and trace

```{r}
posterior <- psc$posterior
head(posterior[1:3,])

# autocorrelation
acf(posterior$beta)

# trace
plot(posterior$beta, type = 's')

```

## Take homes

-   Check your data is formatted correctly (variable names should exactly match that of the model's)

-   
